[Contract]: CountZeroToAnswerToLife

[Interface]:
-() [count_zero_to_answer_to_life]
	* Inputs:
	{
	}
	* Instructions:
		$
			{ id: 6, instruction: instantiate_object, input: (Range, Zero, AnswerToLife), assign: ITERATOR_0, scope: 0 }
			{ id: 7, instruction: evaluate, input: (start, ITERATOR_0), assign: i, scope: 0 }
			{ id: 8, instruction: end_of_iteration_check, input: (i, ITERATOR_0), assign: CHECK_CONDITION_ASSIGNMENT_1, scope: 0 }
			{ id: 10, instruction: jump, input: (CHECK_CONDITION_ASSIGNMENT_1, 9), scope: 0 }
			{ id: 11, instruction: print, input: ("Counting: {}", i), scope: 9 }
			{ id: 12, instruction: increment, input: (i), scope: 9 }
			{ id: 13, instruction: goto, input: (8), scope: 9 }
		$
:[Interface]
[State]:
* [Zero]
	* Type: Integer
	* Initial Value: 0
* [AnswerToLife]
	* Type: Integer
	* Initial Value: 42
:[State]