[Contract]: UpgradeableContract

[Interface]:
-() [init]
	* Inputs:
	{
		e: Env
		admin: Address
	}
	* Output: Result<(), Error>
	* Instructions:
		$
			{ id: 9, instruction: evaluate, input: (e.storage), assign: METHOD_CALL_EXPRESSION_6, scope: 0 }
			{ id: 10, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_6.instance), assign: METHOD_CALL_EXPRESSION_5, scope: 0 }
			{ id: 11, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_5.has, &, DataKey::Admin), assign: CONDITIONAL_JUMP_ASSIGNMENT_0, scope: 0 }
			{ id: 13, instruction: jump, input: (CONDITIONAL_JUMP_ASSIGNMENT_0, 12), scope: 0 }
			{ id: 19, instruction: evaluate, input: (Err, Error::AlreadyInitialized), assign: RETURN_VALUE_LABEL_14, scope: 12 }
			{ id: 20, instruction: return, input: (RETURN_VALUE_LABEL_14), scope: 12 }
			{ id: 34, instruction: evaluate, input: (e.storage), assign: METHOD_CALL_EXPRESSION_31, scope: 0 }
			{ id: 35, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_31.instance), assign: METHOD_CALL_EXPRESSION_30, scope: 0 }
			{ id: 36, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_30.set, &, DataKey::Admin, &, admin), scope: 0 }
			{ id: 38, instruction: instantiate_object, input: (Tuple), assign: CALL_EXPRESSION_ARG_1_37, scope: 0 }
			{ id: 42, instruction: evaluate, input: (Ok, CALL_EXPRESSION_ARG_1_37), assign: Thing_to_return, scope: 0 }
			{ id: 0, instruction: return, input: (Thing_to_return), scope: 0 }
		$
-() [version]
	* Inputs:
	{
	}
	* Output: Integer
	* Instructions:
		$
			{ id: 0, instruction: return, input: (1), scope: 0 }
		$
-() [upgrade]
	* Inputs:
	{
		e: Env
		new_wasm_hash: ByteStringSmall
	}
	* Instructions:
		$
			{ id: 10, instruction: evaluate, input: (e.storage), assign: METHOD_CALL_EXPRESSION_7, scope: 0 }
			{ id: 11, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_7.instance), assign: METHOD_CALL_EXPRESSION_6, scope: 0 }
			{ id: 12, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_6.get, &, DataKey::Admin), assign: METHOD_CALL_EXPRESSION_1, scope: 0 }
			{ id: 13, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_1.unwrap), assign: admin|||Address, scope: 0 }
			{ id: 16, instruction: evaluate, input: (admin.require_auth), scope: 0 }
			{ id: 22, instruction: evaluate, input: (e.deployer), assign: METHOD_CALL_EXPRESSION_19, scope: 0 }
			{ id: 23, instruction: evaluate, input: (METHOD_CALL_EXPRESSION_19.update_current_contract_wasm, new_wasm_hash), scope: 0 }
		$
:[Interface]


[User Defined Types]:
* (DataKey_ENUM)
{
	Admin: ()
}

* (Error_ENUM)
{
	AlreadyInitialized = 1
}

:[User Defined Types]